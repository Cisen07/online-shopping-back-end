<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.demo.mms.dao.AddressMapper">
  <resultMap id="BaseResultMap" type="com.demo.mms.common.domain.AddressKey">
    <id column="userID" jdbcType="INTEGER" property="userid" />
    <id column="name" jdbcType="VARCHAR" property="name" />
    <id column="address" jdbcType="VARCHAR" property="address" />
    <id column="phonenum" jdbcType="VARCHAR" property="phonenum" />
  </resultMap>
  <sql id="Base_Column_List">
    userID, name, address, phonenum
  </sql>
  <delete id="deleteByPrimaryKey" parameterType="com.demo.mms.common.domain.AddressKey">
    delete from address
    where userID = #{userid,jdbcType=INTEGER}
      and name = #{name,jdbcType=VARCHAR}
      and address = #{address,jdbcType=VARCHAR}
      and phonenum = #{phonenum,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.demo.mms.common.domain.AddressKey">
    insert into address (userID, name, address, 
      phonenum)
    values (#{userid,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{phonenum,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.demo.mms.common.domain.AddressKey">
    insert into address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="phonenum != null">
        phonenum,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null">
        #{phonenum,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <select id="getNumberOfAddress" parameterType="java.lang.Integer" resultType="Integer">
         select count(*)
         from  address
         where userID = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectAddressItem" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from address
    where userID = #{id,jdbcType=INTEGER}
    limit #{value},1
  </select>

  <select id="selectAddress" parameterType="com.demo.mms.common.domain.AddressKey" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from address
    where userID = #{userID,jdbcType=INTEGER}
    and name = #{name,jdbcType=VARCHAR}
    and address = #{address,jdbcType=VARCHAR}
    and phonenum = #{phonenum,jdbcType=VARCHAR}
  </select>

  <update id="updateAddress" parameterType="com.demo.mms.common.domain.AddressKey">
    update address
    set name = #{nname,jdbcType=VARCHAR}
      , address = #{nadd,jdbcType=VARCHAR}
      , phonenum = #{nnum,jdbcType=VARCHAR}
    where name = #{name,jdbcType=VARCHAR}
      and userID = #{userID,jdbcType=INTEGER}
      and address = #{address,jdbcType=VARCHAR}
      and phonenum = #{phonenum,jdbcType=VARCHAR}
  </update>

  <insert id="insertAddress" parameterType="com.demo.mms.common.domain.AddressKey">
    insert into address
    values (#{id,jdbcType=INTEGER}, #{nname,jdbcType=VARCHAR}, #{nadd,jdbcType=VARCHAR}, #{nnum,jdbcType=VARCHAR})
  </insert>

  <delete id="deleteAddress" parameterType="java.util.Map">
    delete from address
    where userID = #{id,jdbcType=INTEGER}
      and name = #{name,jdbcType=VARCHAR}
      and address = #{add,jdbcType=VARCHAR}
      and phonenum = #{num,jdbcType=VARCHAR}
  </delete>
</mapper>